<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<context:component-scan base-package="com.otec.foodsafety.api" />

	<context:property-placeholder location="classpath:foodsafety.properties"/><!-- 加载配置文件 -->

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>

                <property name="objectMapper">
                    <ref bean="jacksonObjectMapper" />
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

	<mvc:default-servlet-handler />

	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<!-- <bean class="com.otec.foodsafety.web.interceptor.OpLogInterceptor" /> -->
		<mvc:interceptor>
			<mvc:mapping path="/api/**" />
			<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
			<bean class="com.otec.foodsafety.web.OpLogInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<mvc:cors>
		<mvc:mapping path="/**" allowed-origins="*" allowed-headers="*" 
			allow-credentials="true" max-age="3600" allowed-methods="GET,POST,OPTIONS,DELETE,PUT" />
	</mvc:cors>

    <bean id="jacksonObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
        <!-- 处理responseBody 里面日期类型 -->
        <property name="dateFormat">
            <bean class="java.text.SimpleDateFormat">
                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
            </bean>
        </property>
        <!-- 为null字段时不显示 -->
        <property name="serializationInclusion">
            <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
        </property>
        <!--驼峰命名法转换为小写加下划线-->
        <!--<property name="propertyNamingStrategy">-->
        <!--<bean class="com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerCaseWithUnderscoresStrategy" />-->
        <!--</property>-->
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <ref bean="jacksonObjectMapper" />
        </property>
        <property name="targetMethod" value="configure" />
        <property name="arguments">
            <list>
                <value type="com.fasterxml.jackson.databind.DeserializationFeature">FAIL_ON_UNKNOWN_PROPERTIES</value>
                <value>false</value>
            </list>
        </property>
    </bean>

	<bean id="exceptionResolver" class="com.otec.foodsafety.exception.DefaultExceptionResolver" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="20971520" />
	</bean>

</beans>
